{"version":3,"sources":["firebase/Config.js","components/Login.js","components/MainNav.js","components/EditStaff.js","components/List.js","components/AddJss.js","components/Main.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["Config","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","uiConfig","signInFlow","signInOptions","auth","FacebookAuthProvider","PROVIDER_ID","callbacks","signInSuccess","login","bind","handleChange","signup","state","email","password","e","this","setState","target","name","value","preventDefault","fire","signInWithEmailAndPassword","then","u","catch","error","console","log","createUserWithEmailAndPassword","class","type","placeholder","style","width","onChange","marginTop","onClick","firebaseAuth","Component","MainNav","logout","signOut","className","to","EditStaff","dispatch","useDispatch","form","useSelector","getEmployees","a","axios","get","result","action","employee","data","useEffect","updateEmployee","put","no","deleteEmployee","delete","title","activity","bordered","surname","age","position","mail","tel","status","List","postreduc","employees","length","map","index","key","margin","AddJss","addEmployee","post","Main","App","user","authListener","onAuthStateChanged","Boolean","window","location","hostname","match","initialForm","reducer","combineReducers","filter","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"yNAYeA,EADAC,IAASC,cAVT,CACbC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iB,iCC4FFC,E,kDA9Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,SAAW,CACTC,WAAY,QACZC,cAAe,CACbd,IAASe,KAAKC,qBAAqBC,aAGrCC,UAAW,CACTC,cAAe,kBAAM,KAfvB,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,gBACd,EAAKG,MAAQ,CACXC,MAAO,GACPC,SAAU,IAPK,E,yDAqBNC,GACXC,KAAKC,SAAL,eAAiBF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,U,4BAGtCL,GACJA,EAAEM,iBACFC,EAAKnB,OAAOoB,2BAA2BP,KAAKJ,MAAMC,MAAOG,KAAKJ,MAAME,UAAUU,MAAK,SAACC,OACjFC,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,6BAIXZ,GACLA,EAAEM,iBACFC,EAAKnB,OAAO2B,+BAA+Bd,KAAKJ,MAAMC,MAAOG,KAAKJ,MAAME,UAAUU,MAAK,SAACC,OACrFD,MAAK,SAACC,GAAKG,QAAQC,IAAIJ,MACzBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,Q,+BAKhB,OACE,yBAAKI,MAAO,SACV,yBAAKA,MAAM,UACP,mDAA6B,6BAC7B,qCACF,2BACIX,MAAOJ,KAAKJ,MAAMC,MAClBmB,KAAK,QACLb,KAAK,QACLc,YAAY,gBACZC,MAAO,CAAEC,MAAO,OAChBJ,MAAM,eACNK,SAAUpB,KAAKN,eAGrB,2BACIU,MAAOJ,KAAKJ,MAAME,SAClBkB,KAAK,WACLb,KAAK,WACLc,YAAY,WACZC,MAAO,CAAEC,MAAO,MAAOE,UAAW,QAClCN,MAAM,eACNK,SAAUpB,KAAKN,eACjB,6BAEJ,4BACIsB,KAAK,SACLM,QAAStB,KAAKR,MACduB,MAAM,gBACNG,MAAO,CAAEC,MAAO,MAAOE,UAAW,SAJtC,SAMS,6BAET,4BACIL,KAAK,SACLM,QAAStB,KAAKL,OACdoB,MAAM,gBACNG,MAAO,CAAEC,MAAO,MAAOE,UAAW,SAJtC,YAMS,6BAAM,6BACf,qDACA,kBAAC,IAAD,CACMrC,SAAUgB,KAAKhB,SACfuC,aAAcnD,IAASe,e,GAvFfqC,a,QC2BLC,E,kDA3Bb,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IACD2C,OAAS,EAAKA,OAAOjC,KAAZ,gBAFG,E,qDAMjBa,EAAKnB,OAAOwC,Y,+BAGZ,OACE,6BACI,oDACA,wBAAIC,UAAW,aAEX,kBAAC,IAAD,CAAMC,GAAG,KACL,4BAAI,wBAAId,MAAM,kBAAV,UAER,kBAAC,IAAD,CAAMc,GAAG,IACL,4BAAI,wBAAIP,QAAStB,KAAK0B,QAAlB,kB,GAnBAF,a,kFCoDPM,EAnDG,SAAC/C,GACf,IAAMgD,EAAWC,cACXC,EAAOC,aAAY,SAAAtC,GAAK,OAAIA,EAAMqC,QAElCE,EAAY,uCAAG,8BAAAC,EAAA,sEACIC,IAAMC,IAAN,6DADJ,OACXC,EADW,OAGXC,EAAS,CAACxB,KAAK,gBAAgByB,SAAUF,EAAOG,MACtDX,EAASS,GAJQ,2CAAH,qDAMhBG,qBAAU,WACRR,MACC,IACL,IAAMS,EAAc,uCAAG,sBAAAR,EAAA,sEACbC,IAAMQ,IAAN,oEAAuE9D,EAAM+D,IAAKb,GADrE,OAElBF,EACI,CAACf,KAAK,kBACN8B,GAAI/D,EAAM+D,GACVL,SAAS,eAAIR,EAAL,CAAWa,GAAK/D,EAAM+D,OAElCX,IAPkB,2CAAH,qDAUdY,EAAc,uCAAG,sBAAAX,EAAA,sEACbC,IAAMW,OAAN,oEAA0EjE,EAAM+D,KADnE,OAEnBf,EAAS,CAACf,KAAK,kBAAkB8B,GAAI/D,EAAM+D,KAC3CX,IAHmB,2CAAH,qDAMpB,OACI,6BACI,yBAAMpB,MAAO,SACX,kBAAC,IAAD,CAAMkC,MAAOlE,EAAMmE,SAAUC,UAAU,GACrC,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,+CAAsBpE,EAAMoB,KAA5B,IAAmCpB,EAAMqE,SACzC,oCAAWrE,EAAMsE,IAAjB,cACA,yCAAgBtE,EAAMuE,UACtB,uCAAcvE,EAAMwE,MACpB,6CAAoBxE,EAAMyE,KAC1B,uCAAczE,EAAM0E,SAExB,4BAAQnC,QAASsB,GAAjB,sEACA,4BAAQtB,QAASyB,GAAjB,yDCXLW,EAhCF,WACSxB,aAAY,SAAAtC,GAAK,OAAIA,EAAM+D,aAA7C,IACMC,EAAY1B,aAAY,SAAAtC,GAAK,OAAIA,EAAM6C,YACvCV,EAAWC,cACXG,EAAY,uCAAG,8BAAAC,EAAA,sEACIC,IAAMC,IAAN,6DADJ,OACXC,EADW,OAGXC,EAAS,CAACxB,KAAK,gBAAgByB,SAAUF,EAAOG,MACtDX,EAASS,GAJQ,2CAAH,qDAUhB,OAJAG,qBAAU,WACRR,MACC,IACFvB,QAAQC,IAAI,OAAO+C,GACfA,GAAcA,EAAUC,OAIvB,yBAAKjC,UAAU,aACc,GAApBgC,EAAUC,QAAeD,EAAUE,KAAI,SAACrB,EAAUsB,GAAX,OAEpC,yBAAKC,IAAKD,EAAO7C,MAAO,CAAE+C,OAAQ,KAC9B,kBAAC,EAAcxB,QAP3B,wCC4FDyB,EA5GA,SAACnF,GACZ,IAAMgD,EAAWC,cACXC,EAAOC,aAAY,SAAAtC,GAAK,OAAIA,EAAMqC,QAClC2B,EAAY1B,aAAY,SAAAtC,GAAK,OAAIA,EAAM6C,YAEvCN,EAAY,uCAAG,8BAAAC,EAAA,sEACIC,IAAMC,IAAN,6DADJ,OACXC,EADW,OAGXC,EAAS,CAACxB,KAAK,gBAAgByB,SAAUF,EAAOG,MACtDX,EAASS,GAJQ,2CAAH,qDAMhBG,qBAAU,WACRR,MACC,IAEL,IAAMgC,EAAW,uCAAG,sBAAA/B,EAAA,sEACVC,IAAM+B,KAAN,4DAAwEnC,GAD9D,OAEhBF,EAAS,CACLf,KAAM,eAAgByB,SAAS,aAC3BK,GAAIc,EAAUC,OAAS,EAAID,EAAUA,EAAUC,OAAO,GAAGf,GAAG,EAAI,GAC7Db,KALK,2CAAH,qDAWjB,OACI,yBAAKL,UAAU,aAEX,+BACI,+BACI,4BACI,oCACA,4BACI,2BAAOA,UAAU,OACbZ,KAAK,OACLI,SAAU,SAACrB,GAAD,OAAOgC,EAAS,CAAEf,KAAM,cAAeb,KAAMJ,EAAEG,OAAOE,aAK5E,4BACI,uCACA,4BACA,2BAAOwB,UAAU,OACTZ,KAAK,OACLI,SAAU,SAACrB,GAAD,OAAOgC,EAAS,CAAEf,KAAM,iBAAkBoC,QAASrD,EAAEG,OAAOE,aAIlF,4BACI,mCACA,4BACA,2BAAOwB,UAAU,OACTZ,KAAK,OACLI,SAAU,SAACrB,GAAD,OAAOgC,EAAS,CAAEf,KAAM,aAAcqC,IAAKtD,EAAEG,OAAOE,aAI1E,4BACI,wCACA,4BACA,2BAAOwB,UAAU,OACTZ,KAAK,OACLI,SAAU,SAACrB,GAAD,OAAOgC,EAAS,CAAEf,KAAM,kBAAmBsC,SAAUvD,EAAEG,OAAOE,aAIpF,4BACI,qCACA,4BACA,2BAAOwB,UAAU,OACTZ,KAAK,OACLI,SAAU,SAACrB,GAAD,OAAOgC,EAAS,CAAEf,KAAM,cAAeuC,KAAMxD,EAAEG,OAAOE,aAI5E,4BACI,4CACA,4BACA,2BAAOwB,UAAU,OACTZ,KAAK,OACLI,SAAU,SAACrB,GAAD,OAAOgC,EAAS,CAAEf,KAAM,aAAcwC,IAAKzD,EAAEG,OAAOE,aAI1E,4BACI,sCACA,4BACA,2BAAOwB,UAAU,OACTZ,KAAK,OACLI,SAAU,SAACrB,GAAD,OAAOgC,EAAS,CAAEf,KAAM,gBAAiByC,OAAQ1D,EAAEG,OAAOE,aAIhF,4BACI,6BACA,4BACI,4BAAQwB,UAAU,MAAMN,QAAU6C,GAAlC,aChFbE,E,uKAdP,OACA,kBAAC,IAAD,KACA,6BACA,kBAAC,EAAD,MACA,kDACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GATW7C,aCmCJ8C,E,kDAjCb,WAAYvF,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAS,CACZ2E,KAAM,IAER,EAAKC,aAAe,EAAKA,aAAa/E,KAAlB,gBALH,E,gEASjBO,KAAKwE,iB,qCAGS,IAAD,OACblE,EAAKnB,OAAOsF,oBAAmB,SAACF,GAE1BA,EACF,EAAKtE,SAAS,CAAEsE,SAGhB,EAAKtE,SAAS,CAAEsE,KAAM,Y,+BAM1B,OACE,yBAAK3C,UAAU,OACd5B,KAAKJ,MAAM2E,KAAU,kBAAE,EAAF,MAAa,kBAAE,EAAF,W,GA5BvB/C,aCKEkD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCjBAC,EAAc,CAChBjC,GAAI,GACJ3C,KAAM,GACNiD,QAAS,GACTC,IAAK,GACLC,SAAU,GACVC,KAAM,IACNC,IAAK,IACLC,OAAO,KAkCLuB,EAAUC,YAAgB,CAC5BxC,SAnBkB,WAAoB,IAAnB7C,EAAkB,uDAAZ,GAAG4C,EAAS,uCACrC,OAAOA,EAAOxB,MACV,IAAK,gBACD,OAAOwB,EAAOC,SAClB,IAAK,eACD,MAAM,GAAN,mBAAW7C,GAAX,CAAiB4C,EAAOC,WAC5B,IAAK,kBACA,OAAO7C,EAAMsF,QAAO,SAAAzC,GAAQ,OAAIA,EAASK,MAAQN,EAAOM,MAC7D,IAAK,kBACD,OAAOlD,EAAMkE,KAAI,SAAArB,GAChB,OAAIA,EAASK,MAAQN,EAAOM,GACrBN,EAAOC,SACFA,KAEjB,QACI,OAAO7C,IAKfqC,KAlCgB,WAA6B,IAA5BrC,EAA2B,uDAArBmF,EAAYvC,EAAS,uCAC5C,OAAOA,EAAOxB,MACV,IAAK,YAAa,OAAO,eAAIpB,EAAX,CAAiBkD,GAAIN,EAAOM,KAC9C,IAAK,cAAe,OAAO,eAAIlD,EAAX,CAAiBO,KAAMqC,EAAOrC,OAClD,IAAK,iBAAkB,OAAO,eAAIP,EAAX,CAAiBwD,QAASZ,EAAOY,UACxD,IAAK,aAAc,OAAO,eAAIxD,EAAX,CAAiByD,IAAKb,EAAOa,MAChD,IAAK,kBAAmB,OAAO,eAAIzD,EAAX,CAAiB0D,SAAUd,EAAOc,WAC1D,IAAK,cAAe,OAAO,eAAI1D,EAAX,CAAiB2D,KAAMf,EAAOe,OAClD,IAAK,aAAc,OAAO,eAAI3D,EAAX,CAAiB4D,IAAKhB,EAAOgB,MAChD,IAAK,gBAAiB,OAAO,eAAI5D,EAAX,CAAiB6D,OAAQjB,EAAOiB,SACtD,QAAQ,OAAO7D,MA2BVuF,EAAQC,YAAYJ,GCxCjCK,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAQA,GACjB,kBAAC,EAAD,OAEDI,SAASC,eAAe,SFuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnF,MAAK,SAAAoF,GACJA,EAAaC,gBAEdnF,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMmF,a","file":"static/js/main.7d53b664.chunk.js","sourcesContent":["import firebase from 'firebase';\nconst config = {\n  apiKey: \"AIzaSyBk7NRqeQPD4ORoaYztKd3aOC586tB4KbQ\",\n  authDomain: \"miniproject-88f54.firebaseapp.com\",\n  databaseURL: \"https://miniproject-88f54.firebaseio.com\",\n  projectId: \"miniproject-88f54\",\n  storageBucket: \"miniproject-88f54.appspot.com\",\n  messagingSenderId: \"730277569998\",\n  appId: \"1:730277569998:web:188004ab48670e8bd4779f\",\n  measurementId: \"G-6DBSJHZLL2\"\n  };\nconst Config = firebase.initializeApp(config);  \nexport default Config;","import React, { Component } from 'react';\nimport fire from '../firebase/Config';\nimport \"./Login.css\"\nimport firebase from 'firebase'\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.signup = this.signup.bind(this);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n\n    ],\n    callbacks: {\n      signInSuccess: () => false\n    }\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  login(e) {\n    e.preventDefault();\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\n    }).catch((error) => {\n        console.log(error);\n      });\n  }\n\n  signup(e){\n    e.preventDefault();\n    fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\n    }).then((u)=>{console.log(u)})\n    .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  render() {\n    return (\n      <div class =\"login\">\n        <div class=\"login2\">\n            <h1 >JSS Network Company</h1><hr />\n            <h2>Login</h2>\n          <input \n              value={this.state.email}  \n              type=\"email\" \n              name=\"email\"  \n              placeholder=\"Email address\"\n              style={{ width: \"60%\"}}\n              class=\"form-control\"\n              onChange={this.handleChange}\n          />\n      \n        <input \n            value={this.state.password} \n            type=\"password\" \n            name=\"password\"  \n            placeholder=\"Password\"\n            style={{ width: \"60%\", marginTop: \"20px\"}}\n            class=\"form-control\"\n            onChange={this.handleChange}  \n        /><br /> \n    \n      <button \n          type=\"button\" \n          onClick={this.login}\n          class=\"form-control2\"\n          style={{ width: \"30%\", marginTop: \"15px\" }}>\n            Login\n      </button><br />\n\n      <button\n          type=\"button\" \n          onClick={this.signup}\n          class=\"form-control3\" \n          style={{ width: \"30%\", marginTop: \"15px\" }}>\n            Register\n      </button><br /><hr />\n      <h4 >Login with facebook :</h4>\n      <StyledFirebaseAuth\n            uiConfig={this.uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n      </div>\n    </div>\n    );\n  } \n}\n\nexport default Login;","import React, { Component } from 'react';\r\nimport fire from '../firebase/Config';\r\nimport './Login.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass MainNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  logout() {\r\n    fire.auth().signOut();\r\n  }\r\n  render() {\r\n    return(\r\n      <nav>\r\n          <h1> JSS Network Company</h1>\r\n          <ul className =\"nav-links\">\r\n\r\n              <Link to=\"/\">\r\n                  <li><h4 class=\"btn btn-danger\">Home</h4></li>\r\n              </Link>\r\n              <Link to=\"\">\r\n                  <li><h4 onClick={this.logout}  >Logout</h4></li>\r\n              </Link>\r\n\r\n          </ul>\r\n      </nav>\r\n  );\r\n}\r\n}\r\n\r\nexport default MainNav;","import React, { useEffect }  from 'react';\r\nimport \"./Login.css\"\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Card } from 'antd';\r\n\r\nconst EditStaff = (props)=>{\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(state => state.form)\r\n\r\n    const getEmployees = async () => {\r\n        const result = await axios.get(`https://miniproject5735512156.herokuapp.com/api/employees`)\r\n       \r\n        const action = {type:'GET_EMPLOYEES',employee: result.data}\r\n        dispatch(action)\r\n      }\r\n      useEffect(() => {\r\n        getEmployees()\r\n      }, [])\r\n    const updateEmployee = async () => {\r\n        await axios.put(`https://miniproject5735512156.herokuapp.com/api/employees/${props.no}`,form)\r\n         dispatch(\r\n             {type:'UPDATE_EMPLOYEE',\r\n             no: props.no,\r\n             employee:{...form, no:  props.no}\r\n         })\r\n         getEmployees()\r\n         \r\n       }\r\n    const deleteEmployee = async ()=>{\r\n        await axios.delete(`https://miniproject5735512156.herokuapp.com/api/employees/${props.no}`)\r\n        dispatch({type:'DELETE_EMPLOYEE',no: props.no })\r\n        getEmployees()\r\n      }\r\n         \r\n    return(\r\n        <div  >\r\n            <div  class =' card' >\r\n              <Card title={props.activity} bordered={true} >\r\n                <Col >\r\n                    <Row>\r\n                        <p >Name - Surname : {props.name} {props.surname}</p>\r\n                        <p >Age : {props.age} years old</p>\r\n                        <p >Position : {props.position}</p>\r\n                        <p >E-Mail : {props.mail}</p>\r\n                        <p >Phone number : {props.tel}</p>\r\n                        <p >Status : {props.status}</p>\r\n                    </Row>\r\n                    <button onClick={updateEmployee}>แก้ไขข้อมูล</button>\r\n                    <button onClick={deleteEmployee}>ลบสมาชิก</button>\r\n                </Col>\r\n              </Card>\r\n          </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default EditStaff","import React, { useEffect }  from 'react';\r\nimport EditStaff from './EditStaff'\r\nimport './Login.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios'\r\n\r\nconst List = ()=>{\r\n    const postreduc = useSelector(state => state.postreduc)\r\n    const employees = useSelector(state => state.employee);\r\n    const dispatch = useDispatch();\r\n    const getEmployees = async () => {\r\n        const result = await axios.get(`https://miniproject5735512156.herokuapp.com/api/employees`)\r\n       \r\n        const action = {type:'GET_EMPLOYEES',employee: result.data}\r\n        dispatch(action)\r\n      }\r\n      useEffect(() => {\r\n        getEmployees()\r\n      }, [])\r\n       console.log(\"data\",employees)\r\n      if (!employees || !employees.length)\r\n        return (<h2>No data</h2>)\r\n\r\n    return(\r\n            <div className=\"container\">\r\n                    {employees.length != 0 && employees.map((employee, index) => (\r\n                        // postreduc.map((p, index) => (\r\n                        <div key={index} style={{ margin: 20 }} >\r\n                            <EditStaff {...employee} />\r\n\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n    )\r\n\r\n\r\n}\r\nexport default List","import React, { useEffect }  from 'react';\r\nimport \"./Login.css\"\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst AddJss = (props) => {\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(state => state.form)\r\n    const employees = useSelector(state => state.employee)\r\n\r\n    const getEmployees = async () => {\r\n        const result = await axios.get(`https://miniproject5735512156.herokuapp.com/api/employees`)\r\n       \r\n        const action = {type:'GET_EMPLOYEES',employee: result.data}\r\n        dispatch(action)\r\n      }\r\n      useEffect(() => {\r\n        getEmployees()\r\n      }, [])\r\n\r\n    const addEmployee = async () => {\r\n        await axios.post(`https://miniproject5735512156.herokuapp.com/api/employees`, form)\r\n        dispatch({\r\n            type: 'ADD_EMPLOYEE', employee: {\r\n                no: employees.length > 0 ? employees[employees.length-1].no+1 : 0,\r\n                ...form\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            \r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Name</td>\r\n                        <td>\r\n                            <input className='inpt'\r\n                                type=\"text\"\r\n                                onChange={(e) => dispatch({ type: 'CHANGE_NAME', name: e.target.value })}\r\n                            \r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Surname</td>\r\n                        <td>\r\n                        <input className='inpt'\r\n                                type=\"text\"\r\n                                onChange={(e) => dispatch({ type: 'CHANGE_SURNAME', surname: e.target.value })}\r\n                        />  \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Age</td>\r\n                        <td>\r\n                        <input className='inpt'\r\n                                type=\"text\"\r\n                                onChange={(e) => dispatch({ type: 'CHANGE_AGE', age: e.target.value })}\r\n                        />   \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Position</td>\r\n                        <td>\r\n                        <input className='inpt'\r\n                                type=\"text\"\r\n                                onChange={(e) => dispatch({ type: 'CHANGE_POSITION', position: e.target.value })}\r\n                        />   \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Email</td>\r\n                        <td>\r\n                        <input className='inpt'\r\n                                type=\"text\"\r\n                                onChange={(e) => dispatch({ type: 'CHANGE_MAIL', mail: e.target.value })}\r\n                        />   \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Phone number</td>\r\n                        <td>\r\n                        <input className='inpt'\r\n                                type=\"text\"\r\n                                onChange={(e) => dispatch({ type: 'CHANGE_TEL', tel: e.target.value })}\r\n                        />   \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Status</td>\r\n                        <td>\r\n                        <input className='inpt'\r\n                                type=\"text\"\r\n                                onChange={(e) => dispatch({ type: 'CHANGE_STATUS', status: e.target.value })}\r\n                        />   \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>\r\n                            <button className='btn' onClick ={addEmployee}>Add</button>\r\n                            \r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddJss","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router,Switch,Route } from 'react-router-dom';\r\nimport Nav   from './MainNav';\r\nimport StaffList from './List'\r\nimport AddJss from './AddJss'\r\n\r\nclass Main extends Component {\r\n\r\n    render() {\r\n        return (\r\n        <Router>\r\n        <div>\r\n        <Nav />\r\n        <h2>JSS Network Family</h2>\r\n        <StaffList/>  \r\n        <AddJss/>\r\n        </div>\r\n        </Router>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\nimport fire from './firebase/Config';\nimport Login from './components/Login';\nimport Home from './components/Main';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = ({\n      user: {},\n    });\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n     // console.log(user);\n      if (user) {\n        this.setState({ user });\n       // localStorage.setItem('user', user.uid);\n      } else {\n        this.setState({ user: null });\n        //localStorage.removeItem('user');\n      }\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      {this.state.user ?  ( < Home/>) : (< Login />)}\n      </div> \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers} from 'redux'\r\nconst initialForm = {\r\n    no: '' ,\r\n    name: '',\r\n    surname: '',\r\n    age: '',\r\n    position: '',\r\n    mail: ' ',\r\n    tel: ' ',\r\n    status:' '\r\n}\r\nconst formReducer = (state=initialForm,action)=>{\r\n    switch(action.type){\r\n        case 'CHANGE_NO': return {...state,no: action.no}\r\n        case 'CHANGE_NAME': return {...state,name: action.name}\r\n        case 'CHANGE_SURNAME': return {...state,surname: action.surname}\r\n        case 'CHANGE_AGE': return {...state,age: action.age}\r\n        case 'CHANGE_POSITION': return {...state,position: action.position}\r\n        case 'CHANGE_MAIL': return {...state,mail: action.mail}\r\n        case 'CHANGE_TEL': return {...state,tel: action.tel}\r\n        case 'CHANGE_STATUS': return {...state,status: action.status}\r\n        default:return state;\r\n    }\r\n}\r\n\r\nconst employeeReducer=(state=[],action)=>{\r\n    switch(action.type){\r\n        case 'GET_EMPLOYEES':\r\n            return action.employee\r\n        case 'ADD_EMPLOYEE': \r\n            return [...state,action.employee]\r\n        case 'DELETE_EMPLOYEE':\r\n             return state.filter(employee => employee.no !== +action.no)\r\n        case 'UPDATE_EMPLOYEE': \r\n            return state.map(employee => {\r\n             if(+employee.no === +action.no)\r\n             return action.employee;\r\n             else return employee;\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst reducer = combineReducers({\r\n    employee: employeeReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport const store = createStore(reducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport {store} from './redux/store'\n\nReactDOM.render(\n  <Provider store ={store}> \n   <App />     \n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}